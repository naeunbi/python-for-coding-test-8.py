from collections import defaultdict

def solution(tickets):
    '''
     DFS 문제
     각 node들을 dictionary 이용하여 graph로 표현(순서가 있으므로 value는 list)
     알파벳 순이 빠른 순서대로 방문 되므로 정렬 이 때 pop()을 이용하기 위해 역순으로 정렬
     stack을 만들어서 node 저장
     path를 만들어서 loop를 다 돌지 않았는데 graph안에 없거나 or value가 없을 때 저장
     path에는 기존의 stack이 쌓이게끔
    '''

    graph=defaultdict(list)
    for i in tickets:
        graph[i[0]].append(i[1])
    for i in graph:
        graph[i].sort(reverse=True)
    stack=["ICN"]
    path=[]
    while len(stack)>0:
        top=stack[-1]
        if top not in graph or len(graph[top])==0:
            path.append(stack.pop())
        else:
            stack.append(graph[top].pop())
    path.reverse()
    return path